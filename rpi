#!/bin/bash
#start this script by typing: bash <(curl -sL https://raw.githubusercontent.com/SET-LTD/hexfiles/master/rpi)


echo "          _____                    _____                _____           ";
echo "         /\    \                  /\    \              /\    \          ";
echo "        /::\    \                /::\    \            /::\    \         ";
echo "       /::::\    \              /::::\    \           \:::\    \        ";
echo "      /::::::\    \            /::::::\    \           \:::\    \       ";
echo "     /:::/\:::\    \          /:::/\:::\    \           \:::\    \      ";
echo "    /:::/__\:::\    \        /:::/__\:::\    \           \:::\    \     ";
echo "    \:::\   \:::\    \      /::::\   \:::\    \          /::::\    \    ";
echo "  ___\:::\   \:::\    \    /::::::\   \:::\    \        /::::::\    \   ";
echo " /\   \:::\   \:::\    \  /:::/\:::\   \:::\    \      /:::/\:::\    \  ";
echo "/::\   \:::\   \:::\____\/:::/__\:::\   \:::\____\    /:::/  \:::\____\ ";
echo "\:::\   \:::\   \::/    /\:::\   \:::\   \::/    /   /:::/    \::/    / ";
echo " \:::\   \:::\   \/____/  \:::\   \:::\   \/____/   /:::/    / \/____/  ";
echo "  \:::\   \:::\    \       \:::\   \:::\    \      /:::/    /           ";
echo "   \:::\   \:::\____\       \:::\   \:::\____\    /:::/    /            ";
echo "    \:::\  /:::/    /        \:::\   \::/    /    \::/    /             ";
echo "     \:::\/:::/    /          \:::\   \/____/      \/____/              ";
echo "      \::::::/    /            \:::\    \                               ";
echo "       \::::/    /              \:::\____\                              ";
echo "        \::/    /                \::/    /                              ";
echo "         \/____/                  \/____/                               ";
echo "                                                                        ";

echo "Starting Jakubs Script to install all software from clean image      ";

read -p "Do you wish to auto configure SSL?  Input y/n and hit enter: " askssl
sudo apt-get update
sudo wget https://raw.githubusercontent.com/SET-LTD/hexfiles/master/cron_can.sh -P /home/pi/
sudo chmod +x /home/pi/cron_can.sh
sudo crontab -l | { cat; echo "@reboot /home/pi/cron_can.sh"; } | crontab

sudo apt-get install can-utils
sudo apt install build-essential git -y
bash <(curl -sL https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered)
cd /home/pi/.node-red/
sudo npm install -g node-red-admin
sudo npm install node-red-dashboard
sudo npm install node-red-contrib-arp
sudo npm install node-red-contrib-browser-utils
sudo npm install node-red-contrib-safe-queue

#sudo npm install node-red-contrib-socketcan
sudo npm install red-contrib-socketcan
sudo sed -i -e "\$adtparam=spi=on" /boot/config.txt
sudo sed -i -e "\$adtoverlay=mcp2515-can0,oscillator=16000000,interrupt=25" /boot/config.txt
sudo sed -i -e "\$adtoverlay=spi-bcm2835-overlay" /boot/config.txt

sudo systemctl enable nodered.service


cd /home/pi
rm -rf cliflash
mkdir temp
cd temp
wget https://github.com/PaulStoffregen/teensy_loader_cli/archive/master.zip
sudo apt-get install libusb-dev
unzip master.zip
mv teensy_loader_cli-master cliflash
mv cliflash  /home/pi
cd /home/pi
rm -rf temp
cd /home/pi/cliflash
make
cd /home/pil
sed -i -e  "\$aPATH=\$PATH:/home/pi/cliflash"  .bashrc
sudo wget https://www.pjrc.com/teensy/49-teensy.rules -P /etc/udev/rules.d

cd /home/pi
sudo apt-get install moreutils -y
sudo apt-get install dnsutils -y
sudo apt-get install git -y
myhostnamedot="$(dig -x $(dig +short myip.opendns.com @resolver1.opendns.com) +short)"
myhostname=`echo $myhostnamedot | sed "s/\.$//"`


cd /home/pi
sudo wget http://repo.mosquitto.org/debian/mosquitto-repo.gpg.key -P /home/pi
sudo apt-key add /home/pi/mosquitto-repo.gpg.key
sudo wget http://repo.mosquitto.org/debian/mosquitto-stretch.list -P /etc/apt/sources.list.d
sudo apt-get update
#sudo apt-get install mosquitto -y
if [ "$askssl" = y ] ; then
  sudo rm /etc/mosquitto/mosquitto.conf
  sudo wget https://raw.githubusercontent.com/SET-LTD/hexfiles/master/mosquitto.conf -P /etc/mosquitto
  sudo sed -i "s/xxx/${myhostname}/g" /etc/mosquitto/mosquitto.conf
else
  echo "not configured mosquitto SSL"
fi
cd /home/pi
#sudo apt-get install nginx-full certbot -y
if [ "$askssl" = y ] ; then
  sudo rm /etc/nginx/sites-enabled/default
  sudo rm /etc/nginx/sites-available/default
  sudo wget https://raw.githubusercontent.com/SET-LTD/hexfiles/master/node -P /etc/nginx/sites-available
  sudo sed -i "s/xxx/${myhostname}/g" /etc/nginx/sites-available/node
  sudo ln -s /etc/nginx/sites-available/node /etc/nginx/sites-enabled/node
  sudo certbot certonly  --authenticator standalone -d ${myhostname}  --pre-hook "service nginx stop" --post-hook "service nginx start"
else
  echo "not configured nginx SSL"
fi

sudo-node-red-start
